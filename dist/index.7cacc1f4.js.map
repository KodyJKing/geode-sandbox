{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/index.ts","./src/demos/Bloom.ts","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","../geode/src/graphics/Canvas.ts","../geode/src/math/Vector2.ts","../geode/src/math/GMath.ts","../geode/src/graphics/Color.ts","../geode/src/util.ts","../geode/src/math/geometry/BoundingBox.ts","../geode/src/assets.ts","./src/demos/GJKVisualizer.ts","../geode/src/math/collision/GJK.ts","../geode/src/Input.ts","./src/demos/GJKRaycastVisualizer.ts","../geode/src/math/geometry/Polygon.ts","../geode/src/math/geometry/Ray.ts","../geode/src/math/collision/GJKRaycast.ts","../geode/src/math/geometry/Line.ts","./src/demos/CollisionInfo.ts","../geode/src/math/collision/collision.ts","../geode/src/IGame.ts","../geode/src/Clock.ts"],"sourcesContent":[null,null,null,null,"import Vector2 from \"../math/Vector2\"\r\nimport Transform from \"../math/Transform\"\r\nimport Color from \"./Color\"\r\nimport { camelToDashes } from \"../util\"\r\nimport Matrix3 from \"../math/Matrix3\"\r\n\r\ntype FilterOptions = {\r\n    blur?: number,\r\n    brightness?: number,\r\n    contrast?: number,\r\n    dropShadow?: {\r\n        offsetX: number,\r\n        offsetY: number,\r\n        blurRadius: number,\r\n        color: string | Color\r\n    },\r\n    grayscale?: number,\r\n    hueRotate?: number,\r\n    invert?: number,\r\n    opacity?: number\r\n    saturate?: number,\r\n    sepia?: number\r\n}\r\n\r\ntype FillStyle = string | CanvasGradient | CanvasPattern | Color\r\nfunction coerceFillStyle( style: FillStyle ) {\r\n    return ( style instanceof Color ) ? style.toString() : style\r\n}\r\n\r\nexport default class Canvas {\r\n\r\n    canvas: HTMLCanvasElement | OffscreenCanvas\r\n    context: CanvasRenderingContext2D\r\n\r\n    width: number\r\n    height: number\r\n    pixelDensity = 1\r\n\r\n    private _imageSource = {\r\n        x: 0, y: 0,\r\n        w: 0, h: 0\r\n    }\r\n\r\n    constructor( canvas: HTMLCanvasElement | OffscreenCanvas | string ) {\r\n        if ( typeof canvas == \"string\" ) {\r\n            let _canvas = document.getElementById( canvas )\r\n            if ( _canvas instanceof HTMLCanvasElement )\r\n                canvas = _canvas\r\n            else\r\n                throw new Error( \"No canvas with id: \" + canvas + \" found.\" )\r\n        }\r\n        this.canvas = canvas\r\n        this.context = this.canvas.getContext( \"2d\" ) as CanvasRenderingContext2D\r\n        this.width = canvas.width\r\n        this.height = canvas.height\r\n    }\r\n\r\n    get dimensions() {\r\n        return new Vector2( this.width, this.height )\r\n    }\r\n\r\n    get center() {\r\n        return this.dimensions.half()\r\n    }\r\n\r\n    resize( w, h, pixelDensity = 1 ) {\r\n        this.width = w\r\n        this.height = h\r\n        if ( this.canvas instanceof HTMLCanvasElement ) {\r\n            this.canvas.style.width = w + \"px\"\r\n            this.canvas.style.height = h + \"px\"\r\n        }\r\n        this.canvas.width = w * pixelDensity\r\n        this.canvas.height = h * pixelDensity\r\n        this.pixelDensity = pixelDensity\r\n        this.scale( pixelDensity, pixelDensity )\r\n        return this\r\n    }\r\n\r\n    fitWindow( pixelDensity = 1 ) {\r\n        this.resize( innerWidth, innerHeight, pixelDensity )\r\n        return this\r\n\r\n    }\r\n\r\n    background( style: FillStyle ) {\r\n        let { canvas, context: c, width, height } = this\r\n        c.fillStyle = coerceFillStyle( style )\r\n        c.fillRect( 0, 0, width, height )\r\n        return this\r\n    }\r\n\r\n    clear() {\r\n        this.context.clearRect( 0, 0, this.width, this.height )\r\n        return this\r\n    }\r\n\r\n    reset() {\r\n        this.context.resetTransform()\r\n        this.scale( this.pixelDensity, this.pixelDensity )\r\n        this.clear()\r\n    }\r\n\r\n    vline( a: Vector2, b: Vector2 ) { this.line( a.x, a.y, b.x, b.y ); return this }\r\n    line( x1, y1, x2, y2 ) {\r\n        let { context: c } = this\r\n        c.beginPath()\r\n        c.moveTo( x1, y1 )\r\n        c.lineTo( x2, y2 )\r\n        c.closePath()\r\n        return this\r\n    }\r\n\r\n    vrect( p: Vector2, dimensions: Vector2, center = false ) { this.rect( p.x, p.y, dimensions.x, dimensions.y, center ); return this }\r\n    rect( x, y, w, h, centerX = false, centerY = centerX ) {\r\n        let { context: c } = this\r\n        if ( centerX )\r\n            x -= w / 2\r\n        if ( centerY )\r\n            y -= h / 2\r\n        c.beginPath()\r\n        c.rect( x, y, w, h )\r\n        c.closePath()\r\n        return this\r\n    }\r\n\r\n    vcircle( p: Vector2, r ) { this.circle( p.x, p.y, r ); return this }\r\n    circle( x, y, r ) {\r\n        let { context: c } = this\r\n        c.beginPath()\r\n        c.ellipse( x, y, r, r, 0, 0, Math.PI * 2 )\r\n        c.closePath()\r\n        return this\r\n    }\r\n\r\n    stroke() {\r\n        this.context.stroke()\r\n        return this\r\n    }\r\n\r\n    fill() {\r\n        this.context.fill()\r\n        return this\r\n    }\r\n\r\n    strokeStyle( style: string | Color ) {\r\n        this.context.strokeStyle = style.toString()\r\n        return this\r\n    }\r\n\r\n    fillStyle( style: FillStyle ) {\r\n        this.context.fillStyle = coerceFillStyle( style )\r\n        return this\r\n    }\r\n\r\n    lineWidth( width: number ) {\r\n        this.context.lineWidth = width\r\n        return this\r\n    }\r\n\r\n    alpha( alpha: number ) {\r\n        this.context.globalAlpha = alpha\r\n        return this\r\n    }\r\n\r\n    composition( operation: string ) {\r\n        this.context.globalCompositeOperation = operation\r\n        return this\r\n    }\r\n\r\n    shadow( blur: number, color: string | Color = \"black\" ) {\r\n        this.context.shadowBlur = blur\r\n        this.context.shadowColor = color.toString()\r\n        return this\r\n    }\r\n\r\n    smooth( enable: boolean ) {\r\n        this.context.imageSmoothingEnabled = enable\r\n        return this\r\n    }\r\n\r\n    filter( options: null | string | FilterOptions ) {\r\n        if ( typeof options == \"string\" ) {\r\n            this.context.filter = options\r\n        } else if ( options == null ) {\r\n            this.context.filter = \"none\"\r\n        } else {\r\n\r\n            let stringified = Object.entries( options as any ).map(\r\n                ( [ key, value ] ) => {\r\n                    if ( typeof value == \"object\" )\r\n                        value = Object.values( Object ).map( x => x.toString() ).join( \", \" )\r\n                    let suffix = key == \"hueRotate\" ? \"turn\" : \"\"\r\n                    return camelToDashes( key ) + \"(\" + value + suffix + \")\"\r\n                }\r\n            ).join( \" \" )\r\n\r\n            this.context.filter = stringified\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    vimage( image, p: Vector2, dimensions: Vector2 = Vector2.ZERO, center = false ) { this.image( image, p.x, p.y, dimensions.x, dimensions.y, center ); return this }\r\n    image( image, dx = 0, dy = 0, w = 0, h = 0, center = false ) {\r\n        if ( image.width == 0 ) return this\r\n        if ( center ) {\r\n            w = image.width\r\n            h = image.height\r\n            dx -= w / 2\r\n            dy -= h / 2\r\n        } else {\r\n            w = w || image.width\r\n            h = h || image.height\r\n        }\r\n        this.context.drawImage( image, dx, dy, w, h )\r\n        return this\r\n    }\r\n\r\n    vpartialImage( image, p: Vector2, dimensions: Vector2 ) { this.partialImage( image, p.x, p.y, dimensions.x, dimensions.y ); return this }\r\n    partialImage( image, x = 0, y = 0, w = 0, h = 0 ) {\r\n        let { _imageSource: imageSource } = this\r\n        w = w || imageSource.w\r\n        h = h || imageSource.h\r\n        this.context.drawImage(\r\n            image,\r\n            imageSource.x, imageSource.y,\r\n            imageSource.w, imageSource.h,\r\n            x, y, w, h\r\n        )\r\n    }\r\n\r\n    vimageSource( p: Vector2, dimensions: Vector2 ) { this.imageSource( p.x, p.y, dimensions.x, dimensions.y ); return this }\r\n    imageSource( x, y, w, h ) {\r\n        this._imageSource = { x, y, w, h }\r\n        return this\r\n    }\r\n\r\n    vtranslate( p: Vector2 ) { this.translate( p.x, p.y ); return this }\r\n    translate( x, y ) {\r\n        // this.context.translate( Math.round( x ), Math.round( y ) )\r\n        this.context.translate( x, y )\r\n        return this\r\n    }\r\n\r\n    translateToCenter() {\r\n        this.vtranslate( this.dimensions.half() )\r\n        return this\r\n    }\r\n\r\n    rotate( angle ) {\r\n        this.context.rotate( angle )\r\n        return this\r\n    }\r\n\r\n    vscale( v: Vector2 ) { this.scale( v.x, v.y ); return this }\r\n    scale( x, y ) {\r\n        this.context.scale( x, y )\r\n        return this\r\n    }\r\n\r\n    transform( t: Transform ) {\r\n        let { x, y } = t.position\r\n        let { x: sx, y: sy } = t.scale\r\n        let { x: cx, y: cy } = t.center\r\n        if ( t.parent )\r\n            this.transform( t.parent )\r\n        this.translate( x, y )\r\n            .rotate( t.rotation )\r\n            .scale( sx, sy )\r\n            .translate( -cx, -cy )\r\n        return this\r\n    }\r\n\r\n    inverseTransform( t: Transform ) {\r\n        let { x, y } = t.position\r\n        let { x: sx, y: sy } = t.scale\r\n        let { x: cx, y: cy } = t.center\r\n        this.translate( cx, cy )\r\n            .scale( 1 / sx, 1 / sy )\r\n            .rotate( - t.rotation )\r\n            .translate( -x, -y )\r\n        if ( t.parent )\r\n            this.inverseTransform( t.parent )\r\n        return this\r\n    }\r\n\r\n    applyMatrix( mat: Matrix3 ) {\r\n        let { m11, m12, m13, m21, m22, m23 } = mat\r\n        this.context.transform( m11, m21, m12, m22, m13, m23 )\r\n        return this\r\n    }\r\n\r\n\r\n    vtext( text, p: Vector2, width, font = \"50px pixel\" ) { this.text( text, p.x, p.y, width, font ); return this }\r\n    text( text, x, y, width, font = \"50px pixel\" ) {\r\n        let c = this.context\r\n        c.font = font\r\n        c.fillText( text, x, y, width )\r\n        return this\r\n    }\r\n\r\n    push() {\r\n        this.context.save()\r\n        return this\r\n    }\r\n\r\n    pop() {\r\n        this.context.restore()\r\n        return this\r\n    }\r\n\r\n    path( coords: number[] ) {\r\n        this.context.beginPath()\r\n        for ( let i = 0; i < coords.length; i += 2 ) {\r\n            let x = coords[ i ]\r\n            let y = coords[ i + 1 ]\r\n            if ( i == 0 )\r\n                this.context.moveTo( x, y )\r\n            else\r\n                this.context.lineTo( x, y )\r\n        }\r\n        return this\r\n    }\r\n\r\n    vpath( points: Vector2[] ) {\r\n        this.context.beginPath()\r\n        let i = 0\r\n        for ( let p of points ) {\r\n            if ( i++ == 0 )\r\n                this.context.moveTo( p.x, p.y )\r\n            else\r\n                this.context.lineTo( p.x, p.y )\r\n        }\r\n        return this\r\n    }\r\n\r\n    clip() {\r\n        this.context.clip()\r\n        return this\r\n    }\r\n\r\n    gradient( from: Vector2, to: Vector2, colors: [ number, Color | string ][] ) {\r\n        let grad = this.context.createLinearGradient( from.x, from.y, to.x, to.y )\r\n        for ( let [ percent, color ] of colors )\r\n            grad.addColorStop( percent, color.toString() )\r\n        return grad\r\n    }\r\n}","import GMath from \"./GMath\"\r\n\r\nexport function vector( x, y ) { return new Vector2( x, y ) }\r\nexport default class Vector2 {\r\n\r\n    readonly x: number\r\n    readonly y: number\r\n\r\n    static ZERO = new Vector2( 0, 0 )\r\n    static ONE = new Vector2( 1, 1 )\r\n    static RIGHT = new Vector2( 1, 0 )\r\n    static LEFT = new Vector2( -1, 0 )\r\n    static DOWN = new Vector2( 0, 1 )\r\n    static UP = new Vector2( 0, -1 )\r\n\r\n    constructor( x: number, y: number ) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    get length() { return Math.sqrt( this.x * this.x + this.y * this.y ) }\r\n    get lengthSquared() { return this.x * this.x + this.y * this.y }\r\n    get angle() { return Math.atan2( this.y, this.x ) }\r\n\r\n    unit() { return this.multiply( 1 / this.length ) }\r\n    leftNormal() { return new Vector2( -this.y, this.x ) }\r\n    rightNormal() { return new Vector2( this.y, -this.x ) }\r\n    negate() { return new Vector2( -this.x, -this.y ) }\r\n    half() { return new Vector2( this.x * 0.5, this.y * 0.5 ) }\r\n    copy() { return new Vector2( this.x, this.y ) }\r\n\r\n    floor( scale = 1 ) { return new Vector2( Math.floor( this.x / scale ) * scale, Math.floor( this.y / scale ) * scale ) }\r\n\r\n    add( other: Vector2 ) { return new Vector2( this.x + other.x, this.y + other.y ) }\r\n    addXY( x: number, y: number ) { return new Vector2( this.x + x, this.y + y ) }\r\n    addX( x: number ) { return new Vector2( this.x + x, this.y ) }\r\n    addY( y: number ) { return new Vector2( this.x, this.y + y ) }\r\n    subtract( other: Vector2 ) { return new Vector2( this.x - other.x, this.y - other.y ) }\r\n    dot( other: Vector2 ) { return this.x * other.x + this.y * other.y }\r\n    cross( other: Vector2 ) { return this.x * other.y - this.y * other.x }\r\n    multiply( scale: number ) { return new Vector2( this.x * scale, this.y * scale ) }\r\n    stretch( x: number, y: number ) { return new Vector2( this.x * x, this.y * y ) }\r\n    divide( divisor: number ) { return new Vector2( this.x / divisor, this.y / divisor ) }\r\n    lerp( other: Vector2, t: number ) { return this.multiply( 1 - t ).add( other.multiply( t ) ) }\r\n\r\n    rotated( angle: number ) {\r\n        return this.complexProduct( Vector2.polar( angle, 1 ) )\r\n    }\r\n\r\n    isRightOf( other: Vector2 ) {\r\n        return this.cross( other ) > 0\r\n    }\r\n\r\n    normalOnSide( side: Vector2 ) {\r\n        if ( side.isRightOf( this ) )\r\n            return this.rightNormal()\r\n        return this.leftNormal()\r\n    }\r\n\r\n    *[ Symbol.iterator ]() {\r\n        yield this.x\r\n        yield this.y\r\n    }\r\n\r\n    complexProduct( other: Vector2 ) {\r\n        let x = this.x * other.x - this.y * other.y\r\n        let y = this.x * other.y + this.y * other.x\r\n        return new Vector2( x, y )\r\n    }\r\n\r\n    complexQuotient( other: Vector2 ) {\r\n        let lengthSquared = other.lengthSquared\r\n        let x = this.x * other.x + this.y * other.y\r\n        let y = this.y * other.x - this.x * other.y\r\n        return new Vector2( x / lengthSquared, y / lengthSquared )\r\n    }\r\n\r\n    complexExponential() {\r\n        let magnitude = Math.exp( this.x )\r\n        return new Vector2( magnitude * Math.cos( this.y ), magnitude * Math.sin( this.y ) )\r\n    }\r\n\r\n    projection( other: Vector2 ) {\r\n        return other.multiply( other.dot( this ) / other.lengthSquared )\r\n    }\r\n\r\n    equivalent( other: Vector2, epsilon = 0.000001 ) {\r\n        return GMath.equalivalent( this.x, other.x, epsilon ) &&\r\n            GMath.equalivalent( this.y, other.y, epsilon )\r\n    }\r\n\r\n    static polar( angle, length ) {\r\n        return new Vector2( Math.cos( angle ) * length, Math.sin( angle ) * length )\r\n    }\r\n\r\n    static lissajous( t, xPeriod, yPeriod, xAmplitude = 1, yAmplitude = xAmplitude, xPhase = 0, yPhase = 0 ) {\r\n        return vector(\r\n            Math.cos( GMath.TAU * ( t + xPhase ) / xPeriod ) * xAmplitude,\r\n            Math.sin( GMath.TAU * ( t + yPhase ) / yPeriod ) * yAmplitude\r\n        )\r\n    }\r\n\r\n    static random( length ) {\r\n        let angle = Math.random() * 2 * Math.PI\r\n        return Vector2.polar( angle, length )\r\n    }\r\n\r\n}","export default class GMath {\r\n    static TAU = Math.PI * 2\r\n    static degreesToRadians = GMath.TAU / 360\r\n\r\n    static modulus( n: number, m: number ) {\r\n        return ( ( n % m ) + m ) % m\r\n    }\r\n\r\n    static lerp( a: number, b: number, amount: number ) {\r\n        return a * ( 1 - amount ) + b * amount\r\n    }\r\n\r\n    static clamp( x: number, min: number, max: number ) {\r\n        if ( x < min ) return min\r\n        if ( x > max ) return max\r\n        return x\r\n    }\r\n\r\n    static shortestRotation( from: number, to: number ) {\r\n        let diff = GMath.modulus( to - from, GMath.TAU )\r\n        if ( diff > Math.PI ) diff -= GMath.TAU\r\n        return diff\r\n    }\r\n\r\n    static angleLerp( from: number, to: number, amount: number ) {\r\n        return from + GMath.shortestRotation( from, to ) * amount\r\n    }\r\n\r\n    static sigmoid( x ) {\r\n        let exp = Math.exp( x )\r\n        return exp / ( exp + 1 )\r\n    }\r\n\r\n    static soften( x, softness = 1 ) {\r\n        function f( x ) {\r\n            return x > 1 ?\r\n                x - 0.5 :\r\n                x * x / 2\r\n        }\r\n\r\n        return f( Math.abs( x ) / softness ) * softness * Math.sign( x )\r\n    }\r\n\r\n    static equalivalent( a: number, b: number, epsilon = 0.000001 ) {\r\n        return Math.abs( a - b ) <= epsilon\r\n    }\r\n\r\n}","export function rgb( r: number, g: number, b: number ) {\r\n    return new Color( r, g, b )\r\n}\r\n\r\nexport function rgba( r: number, g: number, b: number, a: number = 1 ) {\r\n    return new Color( r, g, b, a )\r\n}\r\n\r\nexport default class Color {\r\n    r: number\r\n    g: number\r\n    b: number\r\n    a: number\r\n\r\n    constructor( r: number, g: number, b: number, a: number = 1 ) {\r\n        this.r = r\r\n        this.g = g\r\n        this.b = b\r\n        this.a = a\r\n    }\r\n\r\n    static parse( str: string ) {\r\n        if ( str[ 0 ] == \"#\" ) {\r\n            // Parse Hex\r\n            let parts = str.match( /[0-9a-f]{2,2}/ig )!.map( x => parseInt( x, 16 ) )\r\n            return new Color( parts[ 0 ], parts[ 1 ], parts[ 2 ], ( parts[ 3 ] || 255 ) / 255 )\r\n        }\r\n\r\n        if ( str.indexOf( \"(\" ) == -1 ) {\r\n            let color = Color[ str ]\r\n            if ( !color ) throw new Error( \"unrecognized color \" + str )\r\n            return color\r\n        }\r\n\r\n        let type = str.match( /\\w+/ )![ 0 ]\r\n        let args = str.match( /\\d+/g )!.map( x => parseFloat( x ) )\r\n\r\n        switch ( type ) {\r\n            case \"rgb\":\r\n                return new Color( args[ 0 ], args[ 1 ], args[ 2 ] )\r\n            case \"rgba\":\r\n                return new Color( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ] )\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        return `rgba(${this.r},${this.g},${this.b},${this.a})`\r\n    }\r\n\r\n    static aliceblue = Color.parse( \"#f0f8ff\" )\r\n    static antiquewhite = Color.parse( \"#faebd7\" )\r\n    static aqua = Color.parse( \"#00ffff\" )\r\n    static aquamarine = Color.parse( \"#7fffd4\" )\r\n    static azure = Color.parse( \"#f0ffff\" )\r\n    static beige = Color.parse( \"#f5f5dc\" )\r\n    static bisque = Color.parse( \"#ffe4c4\" )\r\n    static black = Color.parse( \"#000000\" )\r\n    static blanchedalmond = Color.parse( \"#ffebcd\" )\r\n    static blue = Color.parse( \"#0000ff\" )\r\n    static blueviolet = Color.parse( \"#8a2be2\" )\r\n    static brown = Color.parse( \"#a52a2a\" )\r\n    static burlywood = Color.parse( \"#deb887\" )\r\n    static cadetblue = Color.parse( \"#5f9ea0\" )\r\n    static chartreuse = Color.parse( \"#7fff00\" )\r\n    static chocolate = Color.parse( \"#d2691e\" )\r\n    static coral = Color.parse( \"#ff7f50\" )\r\n    static cornflowerblue = Color.parse( \"#6495ed\" )\r\n    static cornsilk = Color.parse( \"#fff8dc\" )\r\n    static crimson = Color.parse( \"#dc143c\" )\r\n    static cyan = Color.parse( \"#00ffff\" )\r\n    static darkblue = Color.parse( \"#00008b\" )\r\n    static darkcyan = Color.parse( \"#008b8b\" )\r\n    static darkgoldenrod = Color.parse( \"#b8860b\" )\r\n    static darkgray = Color.parse( \"#a9a9a9\" )\r\n    static darkgreen = Color.parse( \"#006400\" )\r\n    static darkgrey = Color.parse( \"#a9a9a9\" )\r\n    static darkkhaki = Color.parse( \"#bdb76b\" )\r\n    static darkmagenta = Color.parse( \"#8b008b\" )\r\n    static darkolivegreen = Color.parse( \"#556b2f\" )\r\n    static darkorange = Color.parse( \"#ff8c00\" )\r\n    static darkorchid = Color.parse( \"#9932cc\" )\r\n    static darkred = Color.parse( \"#8b0000\" )\r\n    static darksalmon = Color.parse( \"#e9967a\" )\r\n    static darkseagreen = Color.parse( \"#8fbc8f\" )\r\n    static darkslateblue = Color.parse( \"#483d8b\" )\r\n    static darkslategray = Color.parse( \"#2f4f4f\" )\r\n    static darkslategrey = Color.parse( \"#2f4f4f\" )\r\n    static darkturquoise = Color.parse( \"#00ced1\" )\r\n    static darkviolet = Color.parse( \"#9400d3\" )\r\n    static deeppink = Color.parse( \"#ff1493\" )\r\n    static deepskyblue = Color.parse( \"#00bfff\" )\r\n    static dimgray = Color.parse( \"#696969\" )\r\n    static dimgrey = Color.parse( \"#696969\" )\r\n    static dodgerblue = Color.parse( \"#1e90ff\" )\r\n    static firebrick = Color.parse( \"#b22222\" )\r\n    static floralwhite = Color.parse( \"#fffaf0\" )\r\n    static forestgreen = Color.parse( \"#228b22\" )\r\n    static fuchsia = Color.parse( \"#ff00ff\" )\r\n    static gainsboro = Color.parse( \"#dcdcdc\" )\r\n    static ghostwhite = Color.parse( \"#f8f8ff\" )\r\n    static goldenrod = Color.parse( \"#daa520\" )\r\n    static gold = Color.parse( \"#ffd700\" )\r\n    static gray = Color.parse( \"#808080\" )\r\n    static green = Color.parse( \"#008000\" )\r\n    static greenyellow = Color.parse( \"#adff2f\" )\r\n    static grey = Color.parse( \"#808080\" )\r\n    static honeydew = Color.parse( \"#f0fff0\" )\r\n    static hotpink = Color.parse( \"#ff69b4\" )\r\n    static indianred = Color.parse( \"#cd5c5c\" )\r\n    static indigo = Color.parse( \"#4b0082\" )\r\n    static ivory = Color.parse( \"#fffff0\" )\r\n    static khaki = Color.parse( \"#f0e68c\" )\r\n    static lavenderblush = Color.parse( \"#fff0f5\" )\r\n    static lavender = Color.parse( \"#e6e6fa\" )\r\n    static lawngreen = Color.parse( \"#7cfc00\" )\r\n    static lemonchiffon = Color.parse( \"#fffacd\" )\r\n    static lightblue = Color.parse( \"#add8e6\" )\r\n    static lightcoral = Color.parse( \"#f08080\" )\r\n    static lightcyan = Color.parse( \"#e0ffff\" )\r\n    static lightgoldenrodyellow = Color.parse( \"#fafad2\" )\r\n    static lightgray = Color.parse( \"#d3d3d3\" )\r\n    static lightgreen = Color.parse( \"#90ee90\" )\r\n    static lightgrey = Color.parse( \"#d3d3d3\" )\r\n    static lightpink = Color.parse( \"#ffb6c1\" )\r\n    static lightsalmon = Color.parse( \"#ffa07a\" )\r\n    static lightseagreen = Color.parse( \"#20b2aa\" )\r\n    static lightskyblue = Color.parse( \"#87cefa\" )\r\n    static lightslategray = Color.parse( \"#778899\" )\r\n    static lightslategrey = Color.parse( \"#778899\" )\r\n    static lightsteelblue = Color.parse( \"#b0c4de\" )\r\n    static lightyellow = Color.parse( \"#ffffe0\" )\r\n    static lime = Color.parse( \"#00ff00\" )\r\n    static limegreen = Color.parse( \"#32cd32\" )\r\n    static linen = Color.parse( \"#faf0e6\" )\r\n    static magenta = Color.parse( \"#ff00ff\" )\r\n    static maroon = Color.parse( \"#800000\" )\r\n    static mediumaquamarine = Color.parse( \"#66cdaa\" )\r\n    static mediumblue = Color.parse( \"#0000cd\" )\r\n    static mediumorchid = Color.parse( \"#ba55d3\" )\r\n    static mediumpurple = Color.parse( \"#9370db\" )\r\n    static mediumseagreen = Color.parse( \"#3cb371\" )\r\n    static mediumslateblue = Color.parse( \"#7b68ee\" )\r\n    static mediumspringgreen = Color.parse( \"#00fa9a\" )\r\n    static mediumturquoise = Color.parse( \"#48d1cc\" )\r\n    static mediumvioletred = Color.parse( \"#c71585\" )\r\n    static midnightblue = Color.parse( \"#191970\" )\r\n    static mintcream = Color.parse( \"#f5fffa\" )\r\n    static mistyrose = Color.parse( \"#ffe4e1\" )\r\n    static moccasin = Color.parse( \"#ffe4b5\" )\r\n    static navajowhite = Color.parse( \"#ffdead\" )\r\n    static navy = Color.parse( \"#000080\" )\r\n    static oldlace = Color.parse( \"#fdf5e6\" )\r\n    static olive = Color.parse( \"#808000\" )\r\n    static olivedrab = Color.parse( \"#6b8e23\" )\r\n    static orange = Color.parse( \"#ffa500\" )\r\n    static orangered = Color.parse( \"#ff4500\" )\r\n    static orchid = Color.parse( \"#da70d6\" )\r\n    static palegoldenrod = Color.parse( \"#eee8aa\" )\r\n    static palegreen = Color.parse( \"#98fb98\" )\r\n    static paleturquoise = Color.parse( \"#afeeee\" )\r\n    static palevioletred = Color.parse( \"#db7093\" )\r\n    static papayawhip = Color.parse( \"#ffefd5\" )\r\n    static peachpuff = Color.parse( \"#ffdab9\" )\r\n    static peru = Color.parse( \"#cd853f\" )\r\n    static pink = Color.parse( \"#ffc0cb\" )\r\n    static plum = Color.parse( \"#dda0dd\" )\r\n    static powderblue = Color.parse( \"#b0e0e6\" )\r\n    static purple = Color.parse( \"#800080\" )\r\n    static rebeccapurple = Color.parse( \"#663399\" )\r\n    static red = Color.parse( \"#ff0000\" )\r\n    static rosybrown = Color.parse( \"#bc8f8f\" )\r\n    static royalblue = Color.parse( \"#4169e1\" )\r\n    static saddlebrown = Color.parse( \"#8b4513\" )\r\n    static salmon = Color.parse( \"#fa8072\" )\r\n    static sandybrown = Color.parse( \"#f4a460\" )\r\n    static seagreen = Color.parse( \"#2e8b57\" )\r\n    static seashell = Color.parse( \"#fff5ee\" )\r\n    static sienna = Color.parse( \"#a0522d\" )\r\n    static silver = Color.parse( \"#c0c0c0\" )\r\n    static skyblue = Color.parse( \"#87ceeb\" )\r\n    static slateblue = Color.parse( \"#6a5acd\" )\r\n    static slategray = Color.parse( \"#708090\" )\r\n    static slategrey = Color.parse( \"#708090\" )\r\n    static snow = Color.parse( \"#fffafa\" )\r\n    static springgreen = Color.parse( \"#00ff7f\" )\r\n    static steelblue = Color.parse( \"#4682b4\" )\r\n    static tan = Color.parse( \"#d2b48c\" )\r\n    static teal = Color.parse( \"#008080\" )\r\n    static thistle = Color.parse( \"#d8bfd8\" )\r\n    static tomato = Color.parse( \"#ff6347\" )\r\n    static turquoise = Color.parse( \"#40e0d0\" )\r\n    static violet = Color.parse( \"#ee82ee\" )\r\n    static wheat = Color.parse( \"#f5deb3\" )\r\n    static white = Color.parse( \"#ffffff\" )\r\n    static whitesmoke = Color.parse( \"#f5f5f5\" )\r\n    static yellow = Color.parse( \"#ffff00\" )\r\n    static yellowgreen = Color.parse( \"#9acd32\" )\r\n    static transparent = rgba( 0, 0, 0, 0 )\r\n}","import IBoundingBox from \"./math/geometry/IBoundingBox\"\r\nimport Vector2, { vector } from \"./math/Vector2\"\r\nimport BoundingBox from \"./math/geometry/BoundingBox\"\r\n\r\nexport function frozen<T>( obj: T ) {\r\n    return Object.freeze( obj ) as T\r\n}\r\n\r\nexport function renameField( obj, name, newName ) {\r\n    if ( obj.hasOwnProperty( name ) ) {\r\n        obj[ newName ] = obj[ name ]\r\n        delete obj[ name ]\r\n    }\r\n}\r\n\r\nexport function splitCamel( str: string ) {\r\n    return str.match( /[A-Za-z_][a-z0-9_]+/g )\r\n}\r\n\r\nexport function camelToDashes( str: string ) {\r\n    return ( splitCamel( str ) || [] ).join( \"-\" ).toLowerCase()\r\n}\r\n\r\nexport function memoize( func: ( any ) => any ) {\r\n    let cache = {}\r\n    return ( arg ) => {\r\n        let cached = cache[ arg ]\r\n        if ( cached !== undefined )\r\n            return cached\r\n        let value = func( arg )\r\n        cache[ arg ] = value\r\n        return value\r\n    }\r\n}\r\n\r\nexport function fitBox( inner: IBoundingBox, outer: IBoundingBox ) {\r\n    let xRatio = outer.dimensions.x / inner.dimensions.x\r\n    let yRatio = outer.dimensions.y / inner.dimensions.y\r\n    let minRatio = Math.min( xRatio, yRatio )\r\n    let dimensions = inner.dimensions.multiply( minRatio )\r\n    let room = outer.dimensions.subtract( dimensions )\r\n    let offset = room.half()\r\n    return new BoundingBox( dimensions, outer.position.add( offset ) )\r\n}\r\n\r\nexport function argmax<T>( values: T[], func: ( arg: T ) => number ) {\r\n    let best = func( values[ 0 ] )\r\n    let bestIndex = 0\r\n    for ( let i = 0; i < values.length; i++ ) {\r\n        let score = func( values[ i ] )\r\n        if ( score > best ) {\r\n            best = score\r\n            bestIndex = i\r\n        }\r\n    }\r\n    return { best, bestIndex, bestArg: values[ bestIndex ] }\r\n}\r\n\r\nexport interface IConstructor<T> {\r\n    new(): T\r\n}","import IBoundingBox from \"./IBoundingBox\"\r\nimport Vector2 from \"../Vector2\"\r\nexport default class BoundingBox implements IBoundingBox {\r\n    dimensions: Vector2\r\n    position: Vector2\r\n    constructor( dimensions: Vector2, position = Vector2.ZERO ) {\r\n        this.dimensions = dimensions\r\n        this.position = position\r\n    }\r\n\r\n}","import { audioInstance } from \"./audio\"\r\n\r\nconst cache = {}\r\nexport function getAsset( path: string, fromPath: ( string ) => any ) {\r\n    if ( cache[ path ] )\r\n        return cache[ path ]\r\n    let asset = fromPath( path )\r\n    cache[ path ] = asset\r\n    return asset\r\n}\r\n\r\nfunction assetPath( path: string, defaultExtension: string ) {\r\n    if ( path.indexOf( \".\" ) == -1 )\r\n        path = path + \".\" + defaultExtension\r\n    return \"/assets/\" + path\r\n}\r\n\r\nexport function getImage( path: string ) {\r\n    return getAsset( assetPath( \"images/\" + path, \"png\" ), path => {\r\n        let img = new Image()\r\n        img.src = path\r\n        return img\r\n    } ) as HTMLImageElement\r\n}\r\n\r\nexport function getAudio( path: string ) {\r\n    return getAsset( assetPath( \"audio/\" + path, \"mp3\" ), path => new Audio( path ) ) as HTMLAudioElement\r\n}\r\n\r\nexport function isFontLoaded( font: string ) {\r\n    return ( document as any ).fonts.check( \"0px \" + font )\r\n}\r\n\r\nexport function getJSON( path: string ): Promise<any> {\r\n    path = assetPath( path, \"json\" )\r\n    let req = new XMLHttpRequest()\r\n    return new Promise<any>(\r\n        resolve => {\r\n            req.onload = () => resolve( JSON.parse( req.response ) )\r\n            req.open( \"GET\", path )\r\n            req.send()\r\n        }\r\n    )\r\n}",null,"import Vector2 from \"../Vector2\"\r\nimport SupportFunction from \"./SupportFunction\"\r\n\r\nexport default function GJK( support: SupportFunction, simplices?: Vector2[][], maxIterations = 100, initialHeading = Vector2.RIGHT ) {\r\n    let initialPoint = support( initialHeading )\r\n    let heading = initialPoint.negate()\r\n    let simplex: Vector2[] = [ initialPoint ]\r\n\r\n    function checkAndUpdateSimplex() {\r\n        if ( simplices )\r\n            simplices.push( simplex.slice() )\r\n\r\n        switch ( simplex.length ) {\r\n\r\n            case 1: {\r\n                heading = simplex[ 0 ].negate()\r\n                return false\r\n            }\r\n\r\n            case 2: {\r\n                let [ b, a ] = simplex\r\n                let ab = b.subtract( a )\r\n                let ao = a.negate()\r\n                if ( ab.dot( ao ) < 0 ) {\r\n                    heading = ao\r\n                    simplex = [ a ]\r\n                    return false\r\n                }\r\n\r\n                heading = ab.normalOnSide( ao )\r\n                return false\r\n            }\r\n\r\n            case 3: {\r\n                let [ c, b, a ] = simplex\r\n                let ab = b.subtract( a )\r\n                let ac = c.subtract( a )\r\n                let ao = a.negate()\r\n\r\n                let inAB = ab.dot( ao ) > 0\r\n                let inAC = ac.dot( ao ) > 0\r\n\r\n                if ( !inAB && !inAC ) {\r\n                    heading = ao\r\n                    simplex = [ a ]\r\n                    return false\r\n                }\r\n\r\n                let abNormal = ab.normalOnSide( ac ).negate()\r\n                let acNormal = ac.normalOnSide( ab ).negate()\r\n\r\n                let belowAB = abNormal.dot( ao ) < 0\r\n                let belowAC = acNormal.dot( ao ) < 0\r\n\r\n                if ( belowAB && belowAC )\r\n                    return true\r\n\r\n                if ( inAB && !belowAB ) {\r\n                    heading = abNormal\r\n                    simplex = [ b, a ]\r\n                    return false\r\n                }\r\n\r\n                heading = acNormal\r\n                simplex = [ c, a ]\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    let i = 0\r\n    while ( true ) {\r\n        if ( ++i > maxIterations )\r\n            return false\r\n        let nextVertex = support( heading )\r\n        if ( nextVertex.dot( heading ) < 0 )\r\n            return false\r\n        simplex.push( nextVertex )\r\n        let intersected = checkAndUpdateSimplex()\r\n        if ( intersected )\r\n            return true\r\n    }\r\n\r\n}","import Vector2, { vector } from \"./math/Vector2\"\r\nimport Canvas from \"./graphics/Canvas\"\r\n\r\nwindow.addEventListener( \"mousemove\", e => { Input.mouse = vector( e.x, e.y ) } )\r\n\r\nwindow.addEventListener( \"keydown\", e => Input.buttons[ e.key ] = true )\r\nwindow.addEventListener( \"keyup\", e => Input.buttons[ e.key ] = false )\r\n\r\nwindow.addEventListener( \"mousedown\", e => Input.buttons[ \"Mouse\" + e.button ] = true )\r\nwindow.addEventListener( \"mouseup\", e => Input.buttons[ \"Mouse\" + e.button ] = false )\r\n\r\nexport default class Input {\r\n    static mouse = Vector2.ZERO\r\n    static buttons: { [ name: string ]: boolean } = {}\r\n    static mouseScreenPosition( canvas: HTMLCanvasElement | Canvas ) {\r\n        if ( canvas instanceof Canvas )\r\n            canvas = canvas.canvas as HTMLCanvasElement\r\n        let b = canvas.getBoundingClientRect()\r\n        return Input.mouse.addXY( -b.left, -b.top )\r\n    }\r\n}",null,"import Vector2, { vector } from \"../Vector2\"\r\nimport { argmax } from \"../../util\"\r\nimport GMath from \"../GMath\"\r\n\r\nexport default class Polygon {\r\n\r\n    vertices: Vector2[]\r\n    position: Vector2\r\n\r\n    constructor( vertices: Vector2[], position = Vector2.ZERO ) {\r\n        this.vertices = vertices\r\n        this.position = position\r\n    }\r\n\r\n    support( d: Vector2 ) {\r\n        return argmax( this.vertices, v => v.add( this.position ).dot( d ) ).bestArg.add( this.position )\r\n    }\r\n\r\n    static regular( sides: number, radius: number ) {\r\n        let result = new Polygon( [] )\r\n        for ( let i = 0; i < sides; i++ ) {\r\n            let angle = GMath.TAU * i / sides + Math.PI / sides\r\n            result.vertices.push(\r\n                Vector2.polar(\r\n                    angle,\r\n                    radius\r\n                )\r\n            )\r\n        }\r\n        return result\r\n    }\r\n\r\n}","import Vector2 from \"../Vector2\"\r\n\r\nexport default class Ray {\r\n\r\n    readonly point: Vector2\r\n    readonly heading: Vector2\r\n\r\n    pointAt( time: number ) {\r\n        return this.point.add( this.heading.multiply( time ) )\r\n    }\r\n\r\n    constructor( point: Vector2, heading: Vector2 ) {\r\n        this.point = point\r\n        this.heading = heading\r\n    }\r\n\r\n}","import SupportFunction from \"./SupportFunction\"\r\nimport Vector2 from \"../Vector2\"\r\nimport Line from \"../geometry/Line\"\r\n\r\nexport default function GJKRaycast( support: SupportFunction, ray: Vector2, maxIterations = 100 ) {\r\n    let a = support( ray.rightNormal() )\r\n    let b = support( ray.leftNormal() )\r\n\r\n    if ( a.dot( ray.rightNormal() ) < 0 )\r\n        return null\r\n\r\n    if ( b.dot( ray.leftNormal() ) < 0 )\r\n        return null\r\n\r\n    let i = 0\r\n    while ( true ) {\r\n        let ab = b.subtract( a )\r\n        let ao = a.negate()\r\n        let abNormal = ab.normalOnSide( ao )\r\n        let c = support( abNormal )\r\n\r\n        if ( ( ++i == maxIterations ) || c.equivalent( a ) || c.equivalent( b ) )\r\n            return new Line( a, b )\r\n\r\n        if ( c.dot( ray.rightNormal() ) > 0 )\r\n            a = c\r\n        else\r\n            b = c\r\n    }\r\n}","import Vector2 from \"../Vector2\"\r\nimport Ray from \"./Ray\"\r\n\r\nexport default class Line {\r\n    a: Vector2\r\n    b: Vector2\r\n\r\n    constructor( a: Vector2, b: Vector2 ) {\r\n        this.a = a\r\n        this.b = b\r\n    }\r\n\r\n    get heading() {\r\n        return this.b.subtract( this.a )\r\n    }\r\n\r\n    get leftNormal() {\r\n        return this.heading.leftNormal()\r\n    }\r\n\r\n    rayCast( ray: Ray ) {\r\n        let { a, b } = this\r\n        let rayToA = a.subtract( ray.point )\r\n        let n = b.subtract( a ).leftNormal()\r\n        let distance = rayToA.dot( n )\r\n        let speed = ray.heading.dot( n )\r\n        let time = distance / speed\r\n        return time\r\n    }\r\n}",null,"import IBoundingBox from \"../geometry/IBoundingBox\"\r\nimport Vector2 from \"../Vector2\"\r\nimport IBody from \"./IBody\"\r\nimport GJKRaycast from \"./GJKRaycast\"\r\nimport Ray from \"../geometry/Ray\"\r\n\r\nconst left = ( b: IBoundingBox ) => b.position.x\r\nconst right = ( b: IBoundingBox ) => b.position.x + b.dimensions.x\r\nconst top = ( b: IBoundingBox ) => b.position.y\r\nconst bottom = ( b: IBoundingBox ) => b.position.y + b.dimensions.y\r\n\r\nexport function boxContains( b: IBoundingBox, p: Vector2 ) {\r\n    let xContains = contains( left( b ), right( b ), p.x )\r\n    let yContains = contains( top( b ), bottom( b ), p.y )\r\n    return xContains && yContains\r\n}\r\n\r\nexport function boxOverlaps( b0: IBoundingBox, b1: IBoundingBox ) {\r\n    let xOverlaps = overlaps(\r\n        left( b0 ), right( b0 ),\r\n        left( b1 ), right( b1 )\r\n    )\r\n    let yOverlaps = overlaps(\r\n        top( b0 ), bottom( b0 ),\r\n        top( b1 ), bottom( b1 )\r\n    )\r\n    return xOverlaps && yOverlaps\r\n}\r\n\r\nexport function contains( a, b, x ) {\r\n    return x > Math.min( a, b ) && x < Math.max( a, b )\r\n}\r\n\r\nexport function overlaps( a0, a1, b0, b1 ) {\r\n    return contains( a0, a1, b0 ) || contains( a0, a1, b1 )\r\n}\r\n\r\nexport function collisionInfo( a: IBody, b: IBody ) {\r\n    let minkowskiDiffSupport = ( p: Vector2 ) => a.support( p ).subtract( b.support( p.negate() ) )\r\n    let relativeVelocity = b.velocity.subtract( a.velocity )\r\n    let ray = new Ray( Vector2.ZERO, relativeVelocity )\r\n\r\n    let line = GJKRaycast( minkowskiDiffSupport, relativeVelocity )\r\n\r\n    if ( line == null )\r\n        return null\r\n    let time = line.rayCast( ray )\r\n    if ( time <= 0 )\r\n        return null\r\n\r\n    let normal = line.leftNormal.unit()\r\n\r\n    let epsilon = 0.1\r\n    let rotator = Vector2.polar( epsilon, 1 )\r\n    let normalHigh = normal.complexProduct( rotator )\r\n    let normalLow = normal.complexQuotient( rotator )\r\n\r\n    return {\r\n        time,\r\n        normal,\r\n        contact: {\r\n            a: {\r\n                high: a.support( normalHigh ),\r\n                low: a.support( normalLow ),\r\n            },\r\n            b: {\r\n                high: b.support( normalHigh.negate() ),\r\n                low: b.support( normalLow.negate() ),\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { IConstructor } from \"./util\"\r\nimport { GameClock } from \"./Clock\"\r\n\r\nexport default interface IGame {\r\n    update()\r\n}\r\n\r\nexport function startGameLoop( gameClass: IConstructor<IGame> ) {\r\n    window.onload = () => {\r\n        let game = new gameClass()\r\n        function loop() {\r\n            GameClock.tick()\r\n            game.update()\r\n            requestAnimationFrame( loop )\r\n        }\r\n        loop()\r\n    }\r\n}\r\n","const maxDt = 50\r\nexport default class Clock {\r\n    private lastTick = performance.now()\r\n    private paused = false\r\n    private _time = 0\r\n    private _dt = 0\r\n\r\n    get time() { return this._time }\r\n    get dt() { return this._dt }\r\n\r\n    tick() {\r\n        let now = performance.now()\r\n        let actualDt = now - this.lastTick\r\n        let dt = Math.min( actualDt, maxDt )\r\n        this.lastTick = now\r\n\r\n        if (this.paused)\r\n            return\r\n\r\n        this._dt = dt\r\n        this._time += dt\r\n    }\r\n\r\n    pause() {\r\n        this.paused = true\r\n    }\r\n\r\n    unpause() {\r\n        this.paused = false\r\n    }\r\n}\r\n\r\nexport const GameClock = new Clock();\r\n( window as any ).GameClock = GameClock"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","search","slice","game","Bloom","GJKVisualizer","GJKRaycastVisualizer","CollisionInfo","constructor","instance","canvas","addEventListener","keyup","update","render","background","forground","innerCanvas","OffscreenCanvas","fitWindow","smooth","circle","fillStyle","white","fill","composition","image","transferToImageBitmap","foreground","height","dimensions","y","width","x","grassHeight","rect","translate","scale","Math","sin","brightness","hueRotate","pop","shadow","style","toString","pixelDensity","_imageSource","w","h","_canvas","HTMLCanvasElement","Error","context","getContext","center","half","resize","innerWidth","innerHeight","c","coerceFillStyle","fillRect","clearRect","reset","resetTransform","vline","a","b","line","x1","y1","x2","y2","beginPath","moveTo","lineTo","closePath","vrect","p","centerX","centerY","vcircle","r","ellipse","PI","stroke","strokeStyle","lineWidth","alpha","globalAlpha","operation","globalCompositeOperation","blur","color","shadowBlur","shadowColor","enable","imageSmoothingEnabled","options","stringified","Object","entries","key","value","values","suffix","vimage","ZERO","dx","dy","drawImage","vpartialImage","partialImage","imageSource","vimageSource","vtranslate","translateToCenter","rotate","angle","vscale","transform","t","position","sx","sy","cx","cy","rotation","inverseTransform","applyMatrix","mat","m11","m12","m13","m21","m22","m23","vtext","text","font","fillText","save","restore","path","coords","vpath","points","clip","gradient","from","to","colors","grad","createLinearGradient","percent","addColorStop","Vector2","ONE","RIGHT","LEFT","DOWN","UP","sqrt","lengthSquared","atan2","unit","multiply","leftNormal","rightNormal","negate","copy","floor","add","other","addXY","addX","addY","subtract","dot","cross","stretch","divide","divisor","lerp","rotated","complexProduct","polar","isRightOf","normalOnSide","side","Symbol","iterator","complexQuotient","complexExponential","magnitude","exp","cos","projection","equivalent","epsilon","equalivalent","lissajous","xPeriod","yPeriod","xAmplitude","yAmplitude","xPhase","yPhase","vector","TAU","random","degreesToRadians","GMath","modulus","n","m","amount","clamp","min","max","shortestRotation","diff","angleLerp","sigmoid","soften","softness","f","abs","sign","g","Color","str","parts","match","parseInt","args","parseFloat","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","transparent","rgba","obj","freeze","name","newName","hasOwnProperty","splitCamel","toLowerCase","func","arg","inner","outer","xRatio","yRatio","minRatio","room","offset","best","bestIndex","score","bestArg","fromPath","defaultExtension","getAsset","assetPath","img","Image","src","Audio","fonts","check","req","XMLHttpRequest","Promise","resolve","response","open","send","supportPath","support","steps","theta","heading","ellipseSupport","a2","b2","regularPolygon","sides","radius","vertices","polygonSupport","squareSupport","circleSupport","mouse","simplices","simplex","maxIterations","initialHeading","initialPoint","ab","ao","ac","inAB","inAC","abNormal","acNormal","belowAB","belowAC","nextVertex","intersected","checkAndUpdateSimplex","Input","buttons","button","mouseScreenPosition","getBoundingClientRect","left","top","polyPos","Mouse0","polygon","regular","performance","ray","rayLength","time","rayCast","hitPoint","pointAt","normal","point","result","Polygon","rayToA","distance","speed","Body","draw","info","pos","contact","high","low","velocity","drawOutline","shape","dt","right","bottom","xContains","contains","yContains","b0","b1","xOverlaps","overlaps","yOverlaps","a0","a1","minkowskiDiffSupport","relativeVelocity","rotator","normalHigh","normalLow","gameClass","tick","requestAnimationFrame","loop","maxDt","lastTick","paused","_time","_dt","actualDt","pause","unpause","GameClock","Clock"],"version":3,"file":"index.7cacc1f4.js.map","sourceRoot":"/__parcel_source_root/"}