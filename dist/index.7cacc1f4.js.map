{"mappings":"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H,SAASK,aAAcG,MAAO,IAAI;aACtDhH,KAAK,GAAGA,KAAK,GAAGA;MACjBqF,OAAO3H,OACNqJ,UAAU,IAAI/G,IAAI,IAAIiH,KAAKC,IAAIlH,KAAK,IAAI,IACxCb;QAASgI,YAAY,OAAOF,KAAKC,IAAIlH,KAAK;QAAIoH,YAAY,IAAIH,KAAKC,IAAIlH,MAAM;SAC7EqG,+BAAiB,eAAgB,GAAG,GAAG,GAAG,GAAG,MAC7CgB;;WAGFzB,YAAYU;;EAGvBb;SACUJ,UAAW;IACjBA,OAAOS,UAAW,IAAI,GAAIC,OAAQ;QAE9BQ,aAAa,KAAKA;QAClBb,aAAa,KAAKA,WAAYa;IAElClB,OAAO3H;;IAEP2H,OAAOgB,MAAOE,YAAae,OAAQ,+BAAQ,KAAK,KAAK,KAAK,OAAQjB,MAAOX;IACzEL,OAAOgC;;;;;;ACrEfpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;sCCvCmB;;qCACc;;kCACD;;wCAChB;;6BACE;;4BACK;AAER;EAIXlC;IACI,KAAKE,oDAAqB;;EAI9BG;IACI,KAAKC;;;EAKT8B,YAAalC,QAAgBmC,SAAoCC,QAAQ;QACjEC;aACM1H,IAAI,GAAGA,IAAIyH,OAAOzH;UACpB2H,QAAQV,KAAKW,KAAK,IAAI5H,IAAIyH;UAC1BI,6CAAkBC,MAAOH,OAAO;MACpCD,OAAOhK,KAAM8J,QAASK;;IAE1BxC,OAAO0C,MAAOL;IACdrC,OAAO2C,QAAQC;;EAGnBC,eAAgBC,GAAWC,GAAWhG;QAC9BiG,KAAKF,IAAI/F,EAAEwE;QACX0B,KAAKF,IAAIhG,EAAEsE;QACX6B,IAAItB,KAAKuB,MAAOF,IAAID;8CACTP,MAAOS,GAAG,GAAIE,QAASN,GAAGC;;EAG7CM,eAAgBC,QAAQ,GAAGC,SAAS;QAC5BC;aACM7I,IAAI,GAAGA,IAAI2I,OAAO3I,KACxB6I,SAASnL,wCAAcoK,MAAOb,KAAKW,KAAK,IAAIe,QAAQ3I,GAAG,GAAI8I,SAAUF;WAClEC;;EAGXE,eAAgBF,UAAqBzG;gCAClByG,UAAU,AAAArE,KAAKA,EAAEwE,IAAK5G,IAAM6G;;EAG/CxD;SACUJ,UAAW;IACjBA,OAAOS,UAAW,GAAIoD,oBAAoBC,kDAAmBjD,OAAQkD,UAAW;QAE5EP,WAAW,KAAKH,eAAgB,GAAG;QAEnClB,UAAU,AAAEpF;UACRiH,gBAAgB,KAAKN,eAAgBF,UAAUzG;UAC/CkH,gBAAgB,KAAKpB,eAAgB,IAAI,IAAI9F;aAC1CiH,cAAcE,IAAKD,eAAgBC,kCAAWC,OAAQC,SAAUpE,OAAOoB,WAAWiD;;QAGzFC;QACAC,6CAASpC,SAASmC;QAElB3J,IAAI;aACE6J,WAAWF;UACZE,QAAQ5J,UAAU;UAEnBkH,aAAiBnH,MAAM,KAAO,IAAI,IAAI;UACtC8J,IAAI,MAAM3C;UACViB,IAAI,MAAMjB;MACd9B,OAAOY,sCAAiB,GAAG6D,GAAG1B,GAAG;MACjC/C,OAAO0C,MAAO8B;MACdxE,OAAO2C,QAAQC;MACf5C,OAAOc;;IAGX,KAAKoB,YAAalC,QAAQmC;IAC1BnC,OAAO0E;QAEFH,GACDvE,OAAOW,OAAQ,GAAG,GAAG,GAAIC,gDAAiB+D,MAAO7D,aAEjDd,OAAOW,OAAQ,GAAG,GAAG,GAAIC,gDAAiBgE,KAAM9D;;;;;;ACrF5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;sCC9BmB;;qCACc;;kCACD;;6BAEd;;2CAEE;;uCACJ;;+CACO;;iCAEL;;AAEH;EAIXhB;IACI,KAAKE,oDAAoB;;EAG7BG;IACI,KAAKC;;EAGT8B,YAAYlC,QAAgBmC,SAAkCC,QAAQ;QAC9DC;aACK1H,IAAI,GAAGA,IAAIyH,OAAOzH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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/index.ts","./src/demos/Bloom.ts","../geode/lib/graphics/Canvas.js","../geode/lib/math/Vector2.js","../geode/lib/math/GMath.js","../geode/lib/graphics/Color.js","../geode/lib/util.js","../geode/lib/math/geometry/BoundingBox.js","../geode/lib/assets.js","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./src/demos/GJKVisualizer.ts","../geode/lib/math/collision/GJK.js","../geode/lib/Input.js","../geode/lib/IGame.js","../geode/lib/Clock.js","./src/demos/GJKRaycastVisualizer.ts","../geode/lib/math/geometry/Polygon.js","../geode/lib/math/geometry/Ray.js","../geode/lib/math/collision/GJKRaycast.js","../geode/lib/math/geometry/Line.js","./src/demos/CollisionInfo.ts","../geode/lib/math/collision/collision.js"],"sourcesContent":[null,null,null,"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"../math/Vector2\"));\r\nconst Color_1 = __importDefault(require(\"./Color\"));\r\nconst util_1 = require(\"../util\");\r\nfunction coerceFillStyle(style) {\r\n    return (style instanceof Color_1.default) ? style.toString() : style;\r\n}\r\nclass Canvas {\r\n    canvas;\r\n    context;\r\n    width;\r\n    height;\r\n    pixelDensity = 1;\r\n    _imageSource = {\r\n        x: 0, y: 0,\r\n        w: 0, h: 0\r\n    };\r\n    constructor(canvas) {\r\n        if (typeof canvas == \"string\") {\r\n            let _canvas = document.getElementById(canvas);\r\n            if (_canvas instanceof HTMLCanvasElement)\r\n                canvas = _canvas;\r\n            else\r\n                throw new Error(\"No canvas with id: \" + canvas + \" found.\");\r\n        }\r\n        this.canvas = canvas;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        this.width = canvas.width;\r\n        this.height = canvas.height;\r\n    }\r\n    get dimensions() {\r\n        return new Vector2_1.default(this.width, this.height);\r\n    }\r\n    get center() {\r\n        return this.dimensions.half();\r\n    }\r\n    resize(w, h, pixelDensity = 1) {\r\n        this.width = w;\r\n        this.height = h;\r\n        if (this.canvas instanceof HTMLCanvasElement) {\r\n            this.canvas.style.width = w + \"px\";\r\n            this.canvas.style.height = h + \"px\";\r\n        }\r\n        this.canvas.width = w * pixelDensity;\r\n        this.canvas.height = h * pixelDensity;\r\n        this.pixelDensity = pixelDensity;\r\n        this.scale(pixelDensity, pixelDensity);\r\n        return this;\r\n    }\r\n    fitWindow(pixelDensity = 1) {\r\n        this.resize(innerWidth, innerHeight, pixelDensity);\r\n        return this;\r\n    }\r\n    background(style) {\r\n        let { canvas, context: c, width, height } = this;\r\n        c.fillStyle = coerceFillStyle(style);\r\n        c.fillRect(0, 0, width, height);\r\n        return this;\r\n    }\r\n    clear() {\r\n        this.context.clearRect(0, 0, this.width, this.height);\r\n        return this;\r\n    }\r\n    reset() {\r\n        this.context.resetTransform();\r\n        this.scale(this.pixelDensity, this.pixelDensity);\r\n        this.clear();\r\n    }\r\n    vline(a, b) { this.line(a.x, a.y, b.x, b.y); return this; }\r\n    line(x1, y1, x2, y2) {\r\n        let { context: c } = this;\r\n        c.beginPath();\r\n        c.moveTo(x1, y1);\r\n        c.lineTo(x2, y2);\r\n        c.closePath();\r\n        return this;\r\n    }\r\n    vrect(p, dimensions, center = false) { this.rect(p.x, p.y, dimensions.x, dimensions.y, center); return this; }\r\n    rect(x, y, w, h, centerX = false, centerY = centerX) {\r\n        let { context: c } = this;\r\n        if (centerX)\r\n            x -= w / 2;\r\n        if (centerY)\r\n            y -= h / 2;\r\n        c.beginPath();\r\n        c.rect(x, y, w, h);\r\n        c.closePath();\r\n        return this;\r\n    }\r\n    vcircle(p, r) { this.circle(p.x, p.y, r); return this; }\r\n    circle(x, y, r) {\r\n        let { context: c } = this;\r\n        c.beginPath();\r\n        c.ellipse(x, y, r, r, 0, 0, Math.PI * 2);\r\n        c.closePath();\r\n        return this;\r\n    }\r\n    stroke() {\r\n        this.context.stroke();\r\n        return this;\r\n    }\r\n    fill() {\r\n        this.context.fill();\r\n        return this;\r\n    }\r\n    strokeStyle(style) {\r\n        this.context.strokeStyle = style.toString();\r\n        return this;\r\n    }\r\n    fillStyle(style) {\r\n        this.context.fillStyle = coerceFillStyle(style);\r\n        return this;\r\n    }\r\n    lineWidth(width) {\r\n        this.context.lineWidth = width;\r\n        return this;\r\n    }\r\n    alpha(alpha) {\r\n        this.context.globalAlpha = alpha;\r\n        return this;\r\n    }\r\n    composition(operation) {\r\n        this.context.globalCompositeOperation = operation;\r\n        return this;\r\n    }\r\n    shadow(blur, color = \"black\") {\r\n        this.context.shadowBlur = blur;\r\n        this.context.shadowColor = color.toString();\r\n        return this;\r\n    }\r\n    smooth(enable) {\r\n        this.context.imageSmoothingEnabled = enable;\r\n        return this;\r\n    }\r\n    filter(options) {\r\n        if (typeof options == \"string\") {\r\n            this.context.filter = options;\r\n        }\r\n        else if (options == null) {\r\n            this.context.filter = \"none\";\r\n        }\r\n        else {\r\n            let stringified = Object.entries(options).map(([key, value]) => {\r\n                if (typeof value == \"object\")\r\n                    value = Object.values(Object).map(x => x.toString()).join(\", \");\r\n                let suffix = key == \"hueRotate\" ? \"turn\" : \"\";\r\n                return util_1.camelToDashes(key) + \"(\" + value + suffix + \")\";\r\n            }).join(\" \");\r\n            this.context.filter = stringified;\r\n        }\r\n        return this;\r\n    }\r\n    vimage(image, p, dimensions = Vector2_1.default.ZERO, center = false) { this.image(image, p.x, p.y, dimensions.x, dimensions.y, center); return this; }\r\n    image(image, dx = 0, dy = 0, w = 0, h = 0, center = false) {\r\n        if (image.width == 0)\r\n            return this;\r\n        if (center) {\r\n            w = image.width;\r\n            h = image.height;\r\n            dx -= w / 2;\r\n            dy -= h / 2;\r\n        }\r\n        else {\r\n            w = w || image.width;\r\n            h = h || image.height;\r\n        }\r\n        this.context.drawImage(image, dx, dy, w, h);\r\n        return this;\r\n    }\r\n    vpartialImage(image, p, dimensions) { this.partialImage(image, p.x, p.y, dimensions.x, dimensions.y); return this; }\r\n    partialImage(image, x = 0, y = 0, w = 0, h = 0) {\r\n        let { _imageSource: imageSource } = this;\r\n        w = w || imageSource.w;\r\n        h = h || imageSource.h;\r\n        this.context.drawImage(image, imageSource.x, imageSource.y, imageSource.w, imageSource.h, x, y, w, h);\r\n    }\r\n    vimageSource(p, dimensions) { this.imageSource(p.x, p.y, dimensions.x, dimensions.y); return this; }\r\n    imageSource(x, y, w, h) {\r\n        this._imageSource = { x, y, w, h };\r\n        return this;\r\n    }\r\n    vtranslate(p) { this.translate(p.x, p.y); return this; }\r\n    translate(x, y) {\r\n        // this.context.translate( Math.round( x ), Math.round( y ) )\r\n        this.context.translate(x, y);\r\n        return this;\r\n    }\r\n    translateToCenter() {\r\n        this.vtranslate(this.dimensions.half());\r\n        return this;\r\n    }\r\n    rotate(angle) {\r\n        this.context.rotate(angle);\r\n        return this;\r\n    }\r\n    vscale(v) { this.scale(v.x, v.y); return this; }\r\n    scale(x, y) {\r\n        this.context.scale(x, y);\r\n        return this;\r\n    }\r\n    transform(t) {\r\n        let { x, y } = t.position;\r\n        let { x: sx, y: sy } = t.scale;\r\n        let { x: cx, y: cy } = t.center;\r\n        if (t.parent)\r\n            this.transform(t.parent);\r\n        this.translate(x, y)\r\n            .rotate(t.rotation)\r\n            .scale(sx, sy)\r\n            .translate(-cx, -cy);\r\n        return this;\r\n    }\r\n    inverseTransform(t) {\r\n        let { x, y } = t.position;\r\n        let { x: sx, y: sy } = t.scale;\r\n        let { x: cx, y: cy } = t.center;\r\n        this.translate(cx, cy)\r\n            .scale(1 / sx, 1 / sy)\r\n            .rotate(-t.rotation)\r\n            .translate(-x, -y);\r\n        if (t.parent)\r\n            this.inverseTransform(t.parent);\r\n        return this;\r\n    }\r\n    applyMatrix(mat) {\r\n        let { m11, m12, m13, m21, m22, m23 } = mat;\r\n        this.context.transform(m11, m21, m12, m22, m13, m23);\r\n        return this;\r\n    }\r\n    vtext(text, p, width, font = \"50px pixel\") { this.text(text, p.x, p.y, width, font); return this; }\r\n    text(text, x, y, width, font = \"50px pixel\") {\r\n        let c = this.context;\r\n        c.font = font;\r\n        c.fillText(text, x, y, width);\r\n        return this;\r\n    }\r\n    push() {\r\n        this.context.save();\r\n        return this;\r\n    }\r\n    pop() {\r\n        this.context.restore();\r\n        return this;\r\n    }\r\n    path(coords) {\r\n        this.context.beginPath();\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n            let x = coords[i];\r\n            let y = coords[i + 1];\r\n            if (i == 0)\r\n                this.context.moveTo(x, y);\r\n            else\r\n                this.context.lineTo(x, y);\r\n        }\r\n        return this;\r\n    }\r\n    vpath(points) {\r\n        this.context.beginPath();\r\n        let i = 0;\r\n        for (let p of points) {\r\n            if (i++ == 0)\r\n                this.context.moveTo(p.x, p.y);\r\n            else\r\n                this.context.lineTo(p.x, p.y);\r\n        }\r\n        return this;\r\n    }\r\n    clip() {\r\n        this.context.clip();\r\n        return this;\r\n    }\r\n    gradient(from, to, colors) {\r\n        let grad = this.context.createLinearGradient(from.x, from.y, to.x, to.y);\r\n        for (let [percent, color] of colors)\r\n            grad.addColorStop(percent, color.toString());\r\n        return grad;\r\n    }\r\n}\r\nexports.default = Canvas;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.vector = void 0;\r\nconst GMath_1 = __importDefault(require(\"./GMath\"));\r\nfunction vector(x, y) { return new Vector2(x, y); }\r\nexports.vector = vector;\r\nclass Vector2 {\r\n    x;\r\n    y;\r\n    static ZERO = new Vector2(0, 0);\r\n    static ONE = new Vector2(1, 1);\r\n    static RIGHT = new Vector2(1, 0);\r\n    static LEFT = new Vector2(-1, 0);\r\n    static DOWN = new Vector2(0, 1);\r\n    static UP = new Vector2(0, -1);\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get length() { return Math.sqrt(this.x * this.x + this.y * this.y); }\r\n    get lengthSquared() { return this.x * this.x + this.y * this.y; }\r\n    get angle() { return Math.atan2(this.y, this.x); }\r\n    unit() { return this.multiply(1 / this.length); }\r\n    leftNormal() { return new Vector2(-this.y, this.x); }\r\n    rightNormal() { return new Vector2(this.y, -this.x); }\r\n    negate() { return new Vector2(-this.x, -this.y); }\r\n    half() { return new Vector2(this.x * 0.5, this.y * 0.5); }\r\n    copy() { return new Vector2(this.x, this.y); }\r\n    floor(scale = 1) { return new Vector2(Math.floor(this.x / scale) * scale, Math.floor(this.y / scale) * scale); }\r\n    add(other) { return new Vector2(this.x + other.x, this.y + other.y); }\r\n    addXY(x, y) { return new Vector2(this.x + x, this.y + y); }\r\n    addX(x) { return new Vector2(this.x + x, this.y); }\r\n    addY(y) { return new Vector2(this.x, this.y + y); }\r\n    subtract(other) { return new Vector2(this.x - other.x, this.y - other.y); }\r\n    dot(other) { return this.x * other.x + this.y * other.y; }\r\n    cross(other) { return this.x * other.y - this.y * other.x; }\r\n    multiply(scale) { return new Vector2(this.x * scale, this.y * scale); }\r\n    stretch(x, y) { return new Vector2(this.x * x, this.y * y); }\r\n    divide(divisor) { return new Vector2(this.x / divisor, this.y / divisor); }\r\n    lerp(other, t) { return this.multiply(1 - t).add(other.multiply(t)); }\r\n    rotated(angle) {\r\n        return this.complexProduct(Vector2.polar(angle, 1));\r\n    }\r\n    isRightOf(other) {\r\n        return this.cross(other) > 0;\r\n    }\r\n    normalOnSide(side) {\r\n        if (side.isRightOf(this))\r\n            return this.rightNormal();\r\n        return this.leftNormal();\r\n    }\r\n    *[Symbol.iterator]() {\r\n        yield this.x;\r\n        yield this.y;\r\n    }\r\n    complexProduct(other) {\r\n        let x = this.x * other.x - this.y * other.y;\r\n        let y = this.x * other.y + this.y * other.x;\r\n        return new Vector2(x, y);\r\n    }\r\n    complexQuotient(other) {\r\n        let lengthSquared = other.lengthSquared;\r\n        let x = this.x * other.x + this.y * other.y;\r\n        let y = this.y * other.x - this.x * other.y;\r\n        return new Vector2(x / lengthSquared, y / lengthSquared);\r\n    }\r\n    complexExponential() {\r\n        let magnitude = Math.exp(this.x);\r\n        return new Vector2(magnitude * Math.cos(this.y), magnitude * Math.sin(this.y));\r\n    }\r\n    projection(other) {\r\n        return other.multiply(other.dot(this) / other.lengthSquared);\r\n    }\r\n    equivalent(other, epsilon = 0.000001) {\r\n        return GMath_1.default.equalivalent(this.x, other.x, epsilon) &&\r\n            GMath_1.default.equalivalent(this.y, other.y, epsilon);\r\n    }\r\n    static polar(angle, length) {\r\n        return new Vector2(Math.cos(angle) * length, Math.sin(angle) * length);\r\n    }\r\n    static lissajous(t, xPeriod, yPeriod, xAmplitude = 1, yAmplitude = xAmplitude, xPhase = 0, yPhase = 0) {\r\n        return vector(Math.cos(GMath_1.default.TAU * (t + xPhase) / xPeriod) * xAmplitude, Math.sin(GMath_1.default.TAU * (t + yPhase) / yPeriod) * yAmplitude);\r\n    }\r\n    static random(length) {\r\n        let angle = Math.random() * 2 * Math.PI;\r\n        return Vector2.polar(angle, length);\r\n    }\r\n}\r\nexports.default = Vector2;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass GMath {\r\n    static TAU = Math.PI * 2;\r\n    static degreesToRadians = GMath.TAU / 360;\r\n    static modulus(n, m) {\r\n        return ((n % m) + m) % m;\r\n    }\r\n    static lerp(a, b, amount) {\r\n        return a * (1 - amount) + b * amount;\r\n    }\r\n    static clamp(x, min, max) {\r\n        if (x < min)\r\n            return min;\r\n        if (x > max)\r\n            return max;\r\n        return x;\r\n    }\r\n    static shortestRotation(from, to) {\r\n        let diff = GMath.modulus(to - from, GMath.TAU);\r\n        if (diff > Math.PI)\r\n            diff -= GMath.TAU;\r\n        return diff;\r\n    }\r\n    static angleLerp(from, to, amount) {\r\n        return from + GMath.shortestRotation(from, to) * amount;\r\n    }\r\n    static sigmoid(x) {\r\n        let exp = Math.exp(x);\r\n        return exp / (exp + 1);\r\n    }\r\n    static soften(x, softness = 1) {\r\n        function f(x) {\r\n            return x > 1 ?\r\n                x - 0.5 :\r\n                x * x / 2;\r\n        }\r\n        return f(Math.abs(x) / softness) * softness * Math.sign(x);\r\n    }\r\n    static equalivalent(a, b, epsilon = 0.000001) {\r\n        return Math.abs(a - b) <= epsilon;\r\n    }\r\n}\r\nexports.default = GMath;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rgba = exports.rgb = void 0;\r\nfunction rgb(r, g, b) {\r\n    return new Color(r, g, b);\r\n}\r\nexports.rgb = rgb;\r\nfunction rgba(r, g, b, a = 1) {\r\n    return new Color(r, g, b, a);\r\n}\r\nexports.rgba = rgba;\r\nclass Color {\r\n    r;\r\n    g;\r\n    b;\r\n    a;\r\n    constructor(r, g, b, a = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    static parse(str) {\r\n        if (str[0] == \"#\") {\r\n            // Parse Hex\r\n            let parts = str.match(/[0-9a-f]{2,2}/ig).map(x => parseInt(x, 16));\r\n            return new Color(parts[0], parts[1], parts[2], (parts[3] || 255) / 255);\r\n        }\r\n        if (str.indexOf(\"(\") == -1) {\r\n            let color = Color[str];\r\n            if (!color)\r\n                throw new Error(\"unrecognized color \" + str);\r\n            return color;\r\n        }\r\n        let type = str.match(/\\w+/)[0];\r\n        let args = str.match(/\\d+/g).map(x => parseFloat(x));\r\n        switch (type) {\r\n            case \"rgb\":\r\n                return new Color(args[0], args[1], args[2]);\r\n            case \"rgba\":\r\n                return new Color(args[0], args[1], args[2], args[3]);\r\n        }\r\n    }\r\n    toString() {\r\n        return `rgba(${this.r},${this.g},${this.b},${this.a})`;\r\n    }\r\n    static aliceblue = Color.parse(\"#f0f8ff\");\r\n    static antiquewhite = Color.parse(\"#faebd7\");\r\n    static aqua = Color.parse(\"#00ffff\");\r\n    static aquamarine = Color.parse(\"#7fffd4\");\r\n    static azure = Color.parse(\"#f0ffff\");\r\n    static beige = Color.parse(\"#f5f5dc\");\r\n    static bisque = Color.parse(\"#ffe4c4\");\r\n    static black = Color.parse(\"#000000\");\r\n    static blanchedalmond = Color.parse(\"#ffebcd\");\r\n    static blue = Color.parse(\"#0000ff\");\r\n    static blueviolet = Color.parse(\"#8a2be2\");\r\n    static brown = Color.parse(\"#a52a2a\");\r\n    static burlywood = Color.parse(\"#deb887\");\r\n    static cadetblue = Color.parse(\"#5f9ea0\");\r\n    static chartreuse = Color.parse(\"#7fff00\");\r\n    static chocolate = Color.parse(\"#d2691e\");\r\n    static coral = Color.parse(\"#ff7f50\");\r\n    static cornflowerblue = Color.parse(\"#6495ed\");\r\n    static cornsilk = Color.parse(\"#fff8dc\");\r\n    static crimson = Color.parse(\"#dc143c\");\r\n    static cyan = Color.parse(\"#00ffff\");\r\n    static darkblue = Color.parse(\"#00008b\");\r\n    static darkcyan = Color.parse(\"#008b8b\");\r\n    static darkgoldenrod = Color.parse(\"#b8860b\");\r\n    static darkgray = Color.parse(\"#a9a9a9\");\r\n    static darkgreen = Color.parse(\"#006400\");\r\n    static darkgrey = Color.parse(\"#a9a9a9\");\r\n    static darkkhaki = Color.parse(\"#bdb76b\");\r\n    static darkmagenta = Color.parse(\"#8b008b\");\r\n    static darkolivegreen = Color.parse(\"#556b2f\");\r\n    static darkorange = Color.parse(\"#ff8c00\");\r\n    static darkorchid = Color.parse(\"#9932cc\");\r\n    static darkred = Color.parse(\"#8b0000\");\r\n    static darksalmon = Color.parse(\"#e9967a\");\r\n    static darkseagreen = Color.parse(\"#8fbc8f\");\r\n    static darkslateblue = Color.parse(\"#483d8b\");\r\n    static darkslategray = Color.parse(\"#2f4f4f\");\r\n    static darkslategrey = Color.parse(\"#2f4f4f\");\r\n    static darkturquoise = Color.parse(\"#00ced1\");\r\n    static darkviolet = Color.parse(\"#9400d3\");\r\n    static deeppink = Color.parse(\"#ff1493\");\r\n    static deepskyblue = Color.parse(\"#00bfff\");\r\n    static dimgray = Color.parse(\"#696969\");\r\n    static dimgrey = Color.parse(\"#696969\");\r\n    static dodgerblue = Color.parse(\"#1e90ff\");\r\n    static firebrick = Color.parse(\"#b22222\");\r\n    static floralwhite = Color.parse(\"#fffaf0\");\r\n    static forestgreen = Color.parse(\"#228b22\");\r\n    static fuchsia = Color.parse(\"#ff00ff\");\r\n    static gainsboro = Color.parse(\"#dcdcdc\");\r\n    static ghostwhite = Color.parse(\"#f8f8ff\");\r\n    static goldenrod = Color.parse(\"#daa520\");\r\n    static gold = Color.parse(\"#ffd700\");\r\n    static gray = Color.parse(\"#808080\");\r\n    static green = Color.parse(\"#008000\");\r\n    static greenyellow = Color.parse(\"#adff2f\");\r\n    static grey = Color.parse(\"#808080\");\r\n    static honeydew = Color.parse(\"#f0fff0\");\r\n    static hotpink = Color.parse(\"#ff69b4\");\r\n    static indianred = Color.parse(\"#cd5c5c\");\r\n    static indigo = Color.parse(\"#4b0082\");\r\n    static ivory = Color.parse(\"#fffff0\");\r\n    static khaki = Color.parse(\"#f0e68c\");\r\n    static lavenderblush = Color.parse(\"#fff0f5\");\r\n    static lavender = Color.parse(\"#e6e6fa\");\r\n    static lawngreen = Color.parse(\"#7cfc00\");\r\n    static lemonchiffon = Color.parse(\"#fffacd\");\r\n    static lightblue = Color.parse(\"#add8e6\");\r\n    static lightcoral = Color.parse(\"#f08080\");\r\n    static lightcyan = Color.parse(\"#e0ffff\");\r\n    static lightgoldenrodyellow = Color.parse(\"#fafad2\");\r\n    static lightgray = Color.parse(\"#d3d3d3\");\r\n    static lightgreen = Color.parse(\"#90ee90\");\r\n    static lightgrey = Color.parse(\"#d3d3d3\");\r\n    static lightpink = Color.parse(\"#ffb6c1\");\r\n    static lightsalmon = Color.parse(\"#ffa07a\");\r\n    static lightseagreen = Color.parse(\"#20b2aa\");\r\n    static lightskyblue = Color.parse(\"#87cefa\");\r\n    static lightslategray = Color.parse(\"#778899\");\r\n    static lightslategrey = Color.parse(\"#778899\");\r\n    static lightsteelblue = Color.parse(\"#b0c4de\");\r\n    static lightyellow = Color.parse(\"#ffffe0\");\r\n    static lime = Color.parse(\"#00ff00\");\r\n    static limegreen = Color.parse(\"#32cd32\");\r\n    static linen = Color.parse(\"#faf0e6\");\r\n    static magenta = Color.parse(\"#ff00ff\");\r\n    static maroon = Color.parse(\"#800000\");\r\n    static mediumaquamarine = Color.parse(\"#66cdaa\");\r\n    static mediumblue = Color.parse(\"#0000cd\");\r\n    static mediumorchid = Color.parse(\"#ba55d3\");\r\n    static mediumpurple = Color.parse(\"#9370db\");\r\n    static mediumseagreen = Color.parse(\"#3cb371\");\r\n    static mediumslateblue = Color.parse(\"#7b68ee\");\r\n    static mediumspringgreen = Color.parse(\"#00fa9a\");\r\n    static mediumturquoise = Color.parse(\"#48d1cc\");\r\n    static mediumvioletred = Color.parse(\"#c71585\");\r\n    static midnightblue = Color.parse(\"#191970\");\r\n    static mintcream = Color.parse(\"#f5fffa\");\r\n    static mistyrose = Color.parse(\"#ffe4e1\");\r\n    static moccasin = Color.parse(\"#ffe4b5\");\r\n    static navajowhite = Color.parse(\"#ffdead\");\r\n    static navy = Color.parse(\"#000080\");\r\n    static oldlace = Color.parse(\"#fdf5e6\");\r\n    static olive = Color.parse(\"#808000\");\r\n    static olivedrab = Color.parse(\"#6b8e23\");\r\n    static orange = Color.parse(\"#ffa500\");\r\n    static orangered = Color.parse(\"#ff4500\");\r\n    static orchid = Color.parse(\"#da70d6\");\r\n    static palegoldenrod = Color.parse(\"#eee8aa\");\r\n    static palegreen = Color.parse(\"#98fb98\");\r\n    static paleturquoise = Color.parse(\"#afeeee\");\r\n    static palevioletred = Color.parse(\"#db7093\");\r\n    static papayawhip = Color.parse(\"#ffefd5\");\r\n    static peachpuff = Color.parse(\"#ffdab9\");\r\n    static peru = Color.parse(\"#cd853f\");\r\n    static pink = Color.parse(\"#ffc0cb\");\r\n    static plum = Color.parse(\"#dda0dd\");\r\n    static powderblue = Color.parse(\"#b0e0e6\");\r\n    static purple = Color.parse(\"#800080\");\r\n    static rebeccapurple = Color.parse(\"#663399\");\r\n    static red = Color.parse(\"#ff0000\");\r\n    static rosybrown = Color.parse(\"#bc8f8f\");\r\n    static royalblue = Color.parse(\"#4169e1\");\r\n    static saddlebrown = Color.parse(\"#8b4513\");\r\n    static salmon = Color.parse(\"#fa8072\");\r\n    static sandybrown = Color.parse(\"#f4a460\");\r\n    static seagreen = Color.parse(\"#2e8b57\");\r\n    static seashell = Color.parse(\"#fff5ee\");\r\n    static sienna = Color.parse(\"#a0522d\");\r\n    static silver = Color.parse(\"#c0c0c0\");\r\n    static skyblue = Color.parse(\"#87ceeb\");\r\n    static slateblue = Color.parse(\"#6a5acd\");\r\n    static slategray = Color.parse(\"#708090\");\r\n    static slategrey = Color.parse(\"#708090\");\r\n    static snow = Color.parse(\"#fffafa\");\r\n    static springgreen = Color.parse(\"#00ff7f\");\r\n    static steelblue = Color.parse(\"#4682b4\");\r\n    static tan = Color.parse(\"#d2b48c\");\r\n    static teal = Color.parse(\"#008080\");\r\n    static thistle = Color.parse(\"#d8bfd8\");\r\n    static tomato = Color.parse(\"#ff6347\");\r\n    static turquoise = Color.parse(\"#40e0d0\");\r\n    static violet = Color.parse(\"#ee82ee\");\r\n    static wheat = Color.parse(\"#f5deb3\");\r\n    static white = Color.parse(\"#ffffff\");\r\n    static whitesmoke = Color.parse(\"#f5f5f5\");\r\n    static yellow = Color.parse(\"#ffff00\");\r\n    static yellowgreen = Color.parse(\"#9acd32\");\r\n    static transparent = rgba(0, 0, 0, 0);\r\n}\r\nexports.default = Color;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.argmax = exports.fitBox = exports.memoize = exports.camelToDashes = exports.splitCamel = exports.renameField = exports.frozen = void 0;\r\nconst BoundingBox_1 = __importDefault(require(\"./math/geometry/BoundingBox\"));\r\nfunction frozen(obj) {\r\n    return Object.freeze(obj);\r\n}\r\nexports.frozen = frozen;\r\nfunction renameField(obj, name, newName) {\r\n    if (obj.hasOwnProperty(name)) {\r\n        obj[newName] = obj[name];\r\n        delete obj[name];\r\n    }\r\n}\r\nexports.renameField = renameField;\r\nfunction splitCamel(str) {\r\n    return str.match(/[A-Za-z_][a-z0-9_]+/g);\r\n}\r\nexports.splitCamel = splitCamel;\r\nfunction camelToDashes(str) {\r\n    return (splitCamel(str) || []).join(\"-\").toLowerCase();\r\n}\r\nexports.camelToDashes = camelToDashes;\r\nfunction memoize(func) {\r\n    let cache = {};\r\n    return (arg) => {\r\n        let cached = cache[arg];\r\n        if (cached !== undefined)\r\n            return cached;\r\n        let value = func(arg);\r\n        cache[arg] = value;\r\n        return value;\r\n    };\r\n}\r\nexports.memoize = memoize;\r\nfunction fitBox(inner, outer) {\r\n    let xRatio = outer.dimensions.x / inner.dimensions.x;\r\n    let yRatio = outer.dimensions.y / inner.dimensions.y;\r\n    let minRatio = Math.min(xRatio, yRatio);\r\n    let dimensions = inner.dimensions.multiply(minRatio);\r\n    let room = outer.dimensions.subtract(dimensions);\r\n    let offset = room.half();\r\n    return new BoundingBox_1.default(dimensions, outer.position.add(offset));\r\n}\r\nexports.fitBox = fitBox;\r\nfunction argmax(values, func) {\r\n    let best = func(values[0]);\r\n    let bestIndex = 0;\r\n    for (let i = 0; i < values.length; i++) {\r\n        let score = func(values[i]);\r\n        if (score > best) {\r\n            best = score;\r\n            bestIndex = i;\r\n        }\r\n    }\r\n    return { best, bestIndex, bestArg: values[bestIndex] };\r\n}\r\nexports.argmax = argmax;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"../Vector2\"));\r\nclass BoundingBox {\r\n    dimensions;\r\n    position;\r\n    constructor(dimensions, position = Vector2_1.default.ZERO) {\r\n        this.dimensions = dimensions;\r\n        this.position = position;\r\n    }\r\n}\r\nexports.default = BoundingBox;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getJSON = exports.isFontLoaded = exports.getAudio = exports.getImage = exports.getAsset = void 0;\r\nconst cache = {};\r\nfunction getAsset(path, fromPath) {\r\n    if (cache[path])\r\n        return cache[path];\r\n    let asset = fromPath(path);\r\n    cache[path] = asset;\r\n    return asset;\r\n}\r\nexports.getAsset = getAsset;\r\nfunction assetPath(path, defaultExtension) {\r\n    if (path.indexOf(\".\") == -1)\r\n        path = path + \".\" + defaultExtension;\r\n    return \"/assets/\" + path;\r\n}\r\nfunction getImage(path) {\r\n    return getAsset(assetPath(\"images/\" + path, \"png\"), path => {\r\n        let img = new Image();\r\n        img.src = path;\r\n        return img;\r\n    });\r\n}\r\nexports.getImage = getImage;\r\nfunction getAudio(path) {\r\n    return getAsset(assetPath(\"audio/\" + path, \"mp3\"), path => new Audio(path));\r\n}\r\nexports.getAudio = getAudio;\r\nfunction isFontLoaded(font) {\r\n    return document.fonts.check(\"0px \" + font);\r\n}\r\nexports.isFontLoaded = isFontLoaded;\r\nfunction getJSON(path) {\r\n    path = assetPath(path, \"json\");\r\n    let req = new XMLHttpRequest();\r\n    return new Promise(resolve => {\r\n        req.onload = () => resolve(JSON.parse(req.response));\r\n        req.open(\"GET\", path);\r\n        req.send();\r\n    });\r\n}\r\nexports.getJSON = getJSON;\r\n",null,null,"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"../Vector2\"));\r\nfunction GJK(support, simplices, maxIterations = 100, initialHeading = Vector2_1.default.RIGHT) {\r\n    let initialPoint = support(initialHeading);\r\n    let heading = initialPoint.negate();\r\n    let simplex = [initialPoint];\r\n    function checkAndUpdateSimplex() {\r\n        if (simplices)\r\n            simplices.push(simplex.slice());\r\n        switch (simplex.length) {\r\n            case 1: {\r\n                heading = simplex[0].negate();\r\n                return false;\r\n            }\r\n            case 2: {\r\n                let [b, a] = simplex;\r\n                let ab = b.subtract(a);\r\n                let ao = a.negate();\r\n                if (ab.dot(ao) < 0) {\r\n                    heading = ao;\r\n                    simplex = [a];\r\n                    return false;\r\n                }\r\n                heading = ab.normalOnSide(ao);\r\n                return false;\r\n            }\r\n            case 3: {\r\n                let [c, b, a] = simplex;\r\n                let ab = b.subtract(a);\r\n                let ac = c.subtract(a);\r\n                let ao = a.negate();\r\n                let inAB = ab.dot(ao) > 0;\r\n                let inAC = ac.dot(ao) > 0;\r\n                if (!inAB && !inAC) {\r\n                    heading = ao;\r\n                    simplex = [a];\r\n                    return false;\r\n                }\r\n                let abNormal = ab.normalOnSide(ac).negate();\r\n                let acNormal = ac.normalOnSide(ab).negate();\r\n                let belowAB = abNormal.dot(ao) < 0;\r\n                let belowAC = acNormal.dot(ao) < 0;\r\n                if (belowAB && belowAC)\r\n                    return true;\r\n                if (inAB && !belowAB) {\r\n                    heading = abNormal;\r\n                    simplex = [b, a];\r\n                    return false;\r\n                }\r\n                heading = acNormal;\r\n                simplex = [c, a];\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    let i = 0;\r\n    while (true) {\r\n        if (++i > maxIterations)\r\n            return false;\r\n        let nextVertex = support(heading);\r\n        if (nextVertex.dot(heading) < 0)\r\n            return false;\r\n        simplex.push(nextVertex);\r\n        let intersected = checkAndUpdateSimplex();\r\n        if (intersected)\r\n            return true;\r\n    }\r\n}\r\nexports.default = GJK;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importStar(require(\"./math/Vector2\"));\r\nconst Canvas_1 = __importDefault(require(\"./graphics/Canvas\"));\r\nwindow.addEventListener(\"mousemove\", e => { Input.mouse = Vector2_1.vector(e.x, e.y); });\r\nwindow.addEventListener(\"keydown\", e => Input.buttons[e.key] = true);\r\nwindow.addEventListener(\"keyup\", e => Input.buttons[e.key] = false);\r\nwindow.addEventListener(\"mousedown\", e => Input.buttons[\"Mouse\" + e.button] = true);\r\nwindow.addEventListener(\"mouseup\", e => Input.buttons[\"Mouse\" + e.button] = false);\r\nclass Input {\r\n    static mouse = Vector2_1.default.ZERO;\r\n    static buttons = {};\r\n    static mouseScreenPosition(canvas) {\r\n        if (canvas instanceof Canvas_1.default)\r\n            canvas = canvas.canvas;\r\n        let b = canvas.getBoundingClientRect();\r\n        return Input.mouse.addXY(-b.left, -b.top);\r\n    }\r\n}\r\nexports.default = Input;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.startGameLoop = void 0;\r\nconst Clock_1 = require(\"./Clock\");\r\nfunction startGameLoop(gameClass) {\r\n    window.onload = () => {\r\n        let game = new gameClass();\r\n        function loop() {\r\n            Clock_1.GameClock.tick();\r\n            game.update();\r\n            requestAnimationFrame(loop);\r\n        }\r\n        loop();\r\n    };\r\n}\r\nexports.startGameLoop = startGameLoop;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GameClock = void 0;\r\nconst maxDt = 50;\r\nclass Clock {\r\n    lastTick = performance.now();\r\n    paused = false;\r\n    _time = 0;\r\n    _dt = 0;\r\n    get time() { return this._time; }\r\n    get dt() { return this._dt; }\r\n    tick() {\r\n        let now = performance.now();\r\n        let actualDt = now - this.lastTick;\r\n        let dt = Math.min(actualDt, maxDt);\r\n        this.lastTick = now;\r\n        if (this.paused)\r\n            return;\r\n        this._dt = dt;\r\n        this._time += dt;\r\n    }\r\n    pause() {\r\n        this.paused = true;\r\n    }\r\n    unpause() {\r\n        this.paused = false;\r\n    }\r\n}\r\nexports.default = Clock;\r\nexports.GameClock = new Clock();\r\nwindow.GameClock = exports.GameClock;\r\n",null,"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Vector2_1 = __importDefault(require(\"../Vector2\"));\r\nconst util_1 = require(\"../../util\");\r\nconst GMath_1 = __importDefault(require(\"../GMath\"));\r\nclass Polygon {\r\n    vertices;\r\n    position;\r\n    constructor(vertices, position = Vector2_1.default.ZERO) {\r\n        this.vertices = vertices;\r\n        this.position = position;\r\n    }\r\n    support(d) {\r\n        return util_1.argmax(this.vertices, v => v.add(this.position).dot(d)).bestArg.add(this.position);\r\n    }\r\n    static regular(sides, radius) {\r\n        let result = new Polygon([]);\r\n        for (let i = 0; i < sides; i++) {\r\n            let angle = GMath_1.default.TAU * i / sides + Math.PI / sides;\r\n            result.vertices.push(Vector2_1.default.polar(angle, radius));\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = Polygon;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Ray {\r\n    point;\r\n    heading;\r\n    pointAt(time) {\r\n        return this.point.add(this.heading.multiply(time));\r\n    }\r\n    constructor(point, heading) {\r\n        this.point = point;\r\n        this.heading = heading;\r\n    }\r\n}\r\nexports.default = Ray;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Line_1 = __importDefault(require(\"../geometry/Line\"));\r\nfunction GJKRaycast(support, ray, maxIterations = 100) {\r\n    let a = support(ray.rightNormal());\r\n    let b = support(ray.leftNormal());\r\n    if (a.dot(ray.rightNormal()) < 0)\r\n        return null;\r\n    if (b.dot(ray.leftNormal()) < 0)\r\n        return null;\r\n    let i = 0;\r\n    while (true) {\r\n        let ab = b.subtract(a);\r\n        let ao = a.negate();\r\n        let abNormal = ab.normalOnSide(ao);\r\n        let c = support(abNormal);\r\n        if ((++i == maxIterations) || c.equivalent(a) || c.equivalent(b))\r\n            return new Line_1.default(a, b);\r\n        if (c.dot(ray.rightNormal()) > 0)\r\n            a = c;\r\n        else\r\n            b = c;\r\n    }\r\n}\r\nexports.default = GJKRaycast;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Line {\r\n    a;\r\n    b;\r\n    constructor(a, b) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n    get heading() {\r\n        return this.b.subtract(this.a);\r\n    }\r\n    get leftNormal() {\r\n        return this.heading.leftNormal();\r\n    }\r\n    rayCast(ray) {\r\n        let { a, b } = this;\r\n        let rayToA = a.subtract(ray.point);\r\n        let n = b.subtract(a).leftNormal();\r\n        let distance = rayToA.dot(n);\r\n        let speed = ray.heading.dot(n);\r\n        let time = distance / speed;\r\n        return time;\r\n    }\r\n}\r\nexports.default = Line;\r\n",null,"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.collisionInfo = exports.overlaps = exports.contains = exports.boxOverlaps = exports.boxContains = void 0;\r\nconst Vector2_1 = __importDefault(require(\"../Vector2\"));\r\nconst GJKRaycast_1 = __importDefault(require(\"./GJKRaycast\"));\r\nconst Ray_1 = __importDefault(require(\"../geometry/Ray\"));\r\nconst left = (b) => b.position.x;\r\nconst right = (b) => b.position.x + b.dimensions.x;\r\nconst top = (b) => b.position.y;\r\nconst bottom = (b) => b.position.y + b.dimensions.y;\r\nfunction boxContains(b, p) {\r\n    let xContains = contains(left(b), right(b), p.x);\r\n    let yContains = contains(top(b), bottom(b), p.y);\r\n    return xContains && yContains;\r\n}\r\nexports.boxContains = boxContains;\r\nfunction boxOverlaps(b0, b1) {\r\n    let xOverlaps = overlaps(left(b0), right(b0), left(b1), right(b1));\r\n    let yOverlaps = overlaps(top(b0), bottom(b0), top(b1), bottom(b1));\r\n    return xOverlaps && yOverlaps;\r\n}\r\nexports.boxOverlaps = boxOverlaps;\r\nfunction contains(a, b, x) {\r\n    return x > Math.min(a, b) && x < Math.max(a, b);\r\n}\r\nexports.contains = contains;\r\nfunction overlaps(a0, a1, b0, b1) {\r\n    return contains(a0, a1, b0) || contains(a0, a1, b1);\r\n}\r\nexports.overlaps = overlaps;\r\nfunction collisionInfo(a, b) {\r\n    let minkowskiDiffSupport = (p) => a.support(p).subtract(b.support(p.negate()));\r\n    let relativeVelocity = b.velocity.subtract(a.velocity);\r\n    let ray = new Ray_1.default(Vector2_1.default.ZERO, relativeVelocity);\r\n    let line = GJKRaycast_1.default(minkowskiDiffSupport, relativeVelocity);\r\n    if (line == null)\r\n        return null;\r\n    let time = line.rayCast(ray);\r\n    if (time <= 0)\r\n        return null;\r\n    let normal = line.leftNormal.unit();\r\n    let epsilon = 0.1;\r\n    let rotator = Vector2_1.default.polar(epsilon, 1);\r\n    let normalHigh = normal.complexProduct(rotator);\r\n    let normalLow = normal.complexQuotient(rotator);\r\n    return {\r\n        time,\r\n        normal,\r\n        contact: {\r\n            a: {\r\n                high: a.support(normalHigh),\r\n                low: a.support(normalLow),\r\n            },\r\n            b: {\r\n                high: b.support(normalHigh.negate()),\r\n                low: b.support(normalLow.negate()),\r\n            }\r\n        }\r\n    };\r\n}\r\nexports.collisionInfo = collisionInfo;\r\n"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","search","slice","game","Bloom","GJKVisualizer","GJKRaycastVisualizer","CollisionInfo","constructor","instance","canvas","addEventListener","keyup","update","render","background","forground","innerCanvas","OffscreenCanvas","fitWindow","smooth","circle","fillStyle","white","fill","composition","image","transferToImageBitmap","foreground","height","dimensions","y","width","x","grassHeight","rect","translate","scale","Math","sin","brightness","hueRotate","pop","shadow","supportPath","support","steps","points","theta","PI","heading","polar","vpath","context","closePath","ellipseSupport","a","b","a2","b2","p","atan2","stretch","regularPolygon","sides","radius","vertices","multiply","polygonSupport","dot","bestArg","translateToCenter","strokeStyle","lineWidth","squareSupport","circleSupport","add","mouse","subtract","half","simplices","c","simplex","g","stroke","cyan","red","polyPos","buttons","Mouse0","polygon","regular","position","unit","angle","performance","TAU","ray","ZERO","rayLength","line","time","rayCast","hitPoint","pointAt","normal","leftNormal","vline","green","point","vcircle","Body","draw","info","pos","contact","high","low","velocity","blue","gray","drawOutline","shape","dt"],"version":3,"file":"index.7cacc1f4.js.map","sourceRoot":"/__parcel_source_root/"}